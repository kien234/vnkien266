document.addEventListener('DOMContentLoaded', function () {
    Swal.fire({
        title: 'Th√¥ng B√°o',
        html: '<div class="modal-content text-center">' +
            '<div class="modal-header">' +
            '<div class="modal-body">' +
            '<h3 style="text-align: center; color: #ff0000;"><strong>H·ªÜ TH·ªêNG B√ÅO C√ÅO VI PH·∫†M T·ªöI ƒêO√ÄN TR∆Ø·ªúNG</strong></h3>' +
            '<p style="margin-bottom: 10px; font-family: Tahoma; font-weight: 400; line-height: 1.1; color: rgb(51, 51, 51); font-size: 18px; text-align: center;">' +
            '<span id="input_part_0" data-mention="Do Momo update 4.0.16 c√≥ &quot;M√£ tham chi·∫øu = bi·∫øt tr∆∞·ªõc M√£ giao d·ªãch&quot;, n√™n web s·∫Ω t√≠nh bill nh∆∞ sau">' +
            'THPT ƒê√î L∆Ø∆†NG 3</span></p>' +
            '<hr>' +
            '<strong>L∆∞u √ù:</strong><br>' +
            'H√¨nh ·∫£nh v√† video n√™n ph·∫£n √°nh r√µ vi ph·∫°m v√† tu√¢n th·ªß quy ƒë·ªãnh v·ªÅ dung l∆∞·ª£ng.<br>' +
            'ƒê·∫£m b·∫£o nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin tr∆∞·ªõc khi g·ª≠i ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh ch√≠nh x√°c v√† ƒë·∫ßy ƒë·ªß c·ªßa b√°o c√°o.<br>' +
            'N·∫øu c√≥ l·ªói ho·∫∑c v·∫•n ƒë·ªÅ trong qu√° tr√¨nh g·ª≠i, ki·ªÉm tra l·∫°i k·∫øt n·ªëi internet v√† th·ª≠ l·∫°i.</p>' +
            '<hr>' +
            '<p style="text-align: left;">' +
            '</div>' +
            '<div class="modal-footer">' +
            '</div></div>',
        showConfirmButton: true, // ·∫®n n√∫t x√°c nh·∫≠n
        showCloseButton: true,    // ·∫®n n√∫t ƒë√≥ng
        allowOutsideClick: true   // Kh√¥ng ƒë√≥ng popup khi b·∫•m ra ngo√†i
    });
});

function displayFileName(inputId, displayId) {
    const input = document.getElementById(inputId);
    const display = document.getElementById(displayId);

    if (input.files.length > 0) {
        const fileName = input.files[0].name;
        display.textContent = `Selected file: ${fileName}`;
    } else {
        display.textContent = 'Ch∆∞a c√≥ file n√†o ƒë∆∞·ª£c ch·ªçn';
    }
}

// Th√™m h√†m resetFileName ƒë·ªÉ reset hi·ªÉn th·ªã t√™n file khi kh√¥ng c√≥ file n√†o ƒë∆∞·ª£c ch·ªçn
function resetFileName(displayId) {
    const display = document.getElementById(displayId);
    display.textContent = 'Ch∆∞a c√≥ file n√†o ƒë∆∞·ª£c ch·ªçn';
}

function populateClassOptions() {
    const classSelect = document.getElementById('class');
    const classes = ["L·ªõp 10D1", "L·ªõp 10D2", "L·ªõp 10D3", "L·ªõp 10D4", "L·ªõp 10D5", "L·ªõp 10D6", "L·ªõp 10D7", "L·ªõp 10D8", "L·ªõp 10T1", "L·ªõp 10T2", "L·ªõp 10T3", "L·ªõp 10T4", "L·ªõp 10T5", "L·ªõp 10A1", "L·ªõp 10B", "L·ªõp 11D1", "L·ªõp 11D2", "L·ªõp 11D3", "L·ªõp 11D4", "L·ªõp 11D5", "L·ªõp 11D6", "L·ªõp 11D7", "L·ªõp 11T1", "L·ªõp 11T2", "L·ªõp 11T3", "L·ªõp 11T4", "L·ªõp 11T5", "L·ªõp 11A1", "L·ªõp 11B", "L·ªõp 12D1", "L·ªõp 12D2", "L·ªõp 12D3", "L·ªõp 12D4", "L·ªõp 12D5", "L·ªõp 12D6", "L·ªõp 12D7", "L·ªõp 12T1", "L·ªõp 12T2", "L·ªõp 12T3", "L·ªõp 12T4", "L·ªõp 12A1", "L·ªõp 12B"];

    for (let i = 0; i < classes.length; i++) {
        const option = document.createElement('option');
        option.value = classes[i];
        option.text = classes[i];
        classSelect.appendChild(option);
    }
}

function toggleSenderInfo() {
    const senderType = document.getElementById('senderType');
    const classGroup = document.getElementById('classGroup');
    const teacherNameGroup = document.getElementById('teacherNameGroup');

    if (senderType.value === 'student') {
        classGroup.style.display = 'block';
        teacherNameGroup.style.display = 'none';
    } else if (senderType.value === 'teacher') {
        classGroup.style.display = 'none';
        teacherNameGroup.style.display = 'block';
    }
}

async function submitReport() {
    var videoInput = document.getElementById('videoInput');
    var imageInput = document.getElementById('imageInput');

    if (!imageInput.files.length && !videoInput.files.length) {
        Swal.fire({
            icon: 'warning',
            title: 'C·∫£nh b√°o',
            text: 'B·∫°n c·∫ßn ch·ªçn √≠t nh·∫•t m·ªôt trong hai t·ªáp ·∫£nh ho·∫∑c video.',
        });
        return;
    }

    var reportLimitExceeded = checkReportLimit();
    if (reportLimitExceeded) {
        Swal.fire({
            icon: 'error',
            title: 'L·ªói',
            text: 'B·∫°n ƒë√£ v∆∞·ª£t qu√° s·ªë l·∫ßn b√°o c√°o trong m·ªôt gi·ªù. Vui l√≤ng th·ª≠ l·∫°i sau.',
        });
        return;
    }

    // L·∫•y gi√° tr·ªã ƒë·∫ßu v√†o t·ª´ ng∆∞·ªùi d√πng
    var fullName = document.getElementById('fullName').value;
    var reportReason = document.getElementById('reportReason').value;
    var senderType = document.getElementById('senderType').value;

    var additionalInfo = '';

    // Th√¥ng tin b·ªï sung d·ª±a tr√™n lo·∫°i ng∆∞·ªùi g·ª≠i
    if (senderType === 'student') {
        var selectedClass = document.getElementById('class').value;
        if (!selectedClass) {
            alert('Vui l√≤ng ch·ªçn l·ªõp!');
            return;
        }
        additionalInfo = `Ng∆∞·ªùi ƒë√£ g·ª≠i T·ªë C√°o: H·ªçc sinh\n\nL·ªõp t·ªë c√°o: ${selectedClass}`;
    } else if (senderType === 'teacher') {
        var teacherName = document.getElementById('teacherName').value;
        if (!teacherName) {
            alert('Vui l√≤ng nh·∫≠p t√™n c·ªßa b·∫°n!');
            return;
        }
        additionalInfo = `Ng∆∞·ªùi ƒë√£ g·ª≠i T·ªë C√°o: Gi√°o vi√™n {ph·ª• huynh}\n\nT√™n Gi√°o vi√™n {ph·ª• huynh}: ${teacherName}`;
    }

    // Th√¥ng tin b·ªï sung cho lo·∫°i ng∆∞·ªùi g·ª≠i l√† h·ªçc sinh
    if (senderType === 'student') {
        var reportedClass = document.getElementById('class2').value;
        if (!reportedClass) {
            alert('Vui l√≤ng ch·ªçn l·ªõp c√≥ h·ªçc sinh vi ph·∫°m!');
            return;
        }
        additionalInfo += `\n\nL·ªõp c√≥ h·ªçc sinh vi ph·∫°m: ${reportedClass}`;
    }

    // Th√¥ng tin b·ªï sung: t√™n c·ªßa ng∆∞·ªùi b·ªã t·ªë c√°o
    additionalInfo += `\nT√™n ng∆∞·ªùi b·ªã t·ªë c√°o: ${fullName}`;

    // L·∫•y v√† hi·ªÉn th·ªã ƒë·ªãa ch·ªâ IP c·ªßa ng∆∞·ªùi d√πng
    var userIP = await getUserIP();

    // G·ª≠i th√¥ng ƒëi·ªáp cu·ªëi c√πng
    await sendTelegramMessage(`üì¢ C√≥ T·ªë c√°o t·ª´üì¢:\n${additionalInfo}\n\nL√Ω do: ${reportReason}`);
}

function checkReportLimit() {
    // L·∫•y timestamp hi·ªán t·∫°i t√≠nh b·∫±ng gi√¢y
    var currentTimestamp = Math.floor(Date.now() / 1000);

    // L·∫•y timestamp v√† ƒë·∫øm t·ª´ local storage
    var storedTimestamp = localStorage.getItem('reportTimestamp');
    var storedCount = localStorage.getItem('reportCount');

    // N·∫øu kh√¥ng c√≥ timestamp ƒë√£ l∆∞u ho·∫∑c timestamp ƒë√£ l∆∞u c√°ch ƒë√¢y h∆°n m·ªôt gi·ªù, ƒë·∫∑t l·∫°i ƒë·∫øm v√† c·∫≠p nh·∫≠t timestamp
    if (!storedTimestamp || currentTimestamp - storedTimestamp > 3600) {
        localStorage.setItem('reportTimestamp', currentTimestamp);
        localStorage.setItem('reportCount', 1);
        return false;
    }

    // N·∫øu ƒë·∫øm nh·ªè h∆°n gi·ªõi h·∫°n, tƒÉng ƒë·∫øm v√† c·∫≠p nh·∫≠t timestamp
    if (storedCount < 100) {
        localStorage.setItem('reportCount', parseInt(storedCount) + 1);
        localStorage.setItem('reportTimestamp', currentTimestamp);
        return false;
    }

    // N·∫øu ƒë·∫øm v∆∞·ª£t qu√° gi·ªõi h·∫°n, tr·∫£ v·ªÅ true (ƒë√£ v∆∞·ª£t qu√° gi·ªõi h·∫°n b√°o c√°o)
    return true;
}

async function getUserIP() {
    try {
        const response = await fetch('https://api64.ipify.org?format=json');
        const data = await response.json();
        return data.ip;
    } catch (error) {
        console.error(error);
        return 'N/A';
    }
}

async function sendTelegramMessage(message) {
    var token = '6889088304:AAED5-lcYegRJRP6dPeQiOvLSs0KbxkkyfU';
    var chatId = '6520036650';

    try {
        const now = new Date();
        const dateTimeString = now.toLocaleString();

        // L·∫•y ƒë·ªãa ch·ªâ IP c·ªßa ng∆∞·ªùi g·ª≠i
        const userIP = await getUserIP();

        // Th√™m ƒë·ªãa ch·ªâ IP v√†o n·ªôi dung tin nh·∫Øn
        message += `\n\nüåê **IP ng∆∞·ªùi g·ª≠i:** ${userIP}`;

        // Ki·ªÉm tra v√† g·ª≠i t·ªáp ·∫£nh
        const imageInput = document.getElementById('imageInput');
        if (imageInput.files.length > 0) {
            const imageFile = imageInput.files[0];
            if (!checkFileSize(imageFile, 15)) {
                Swal.fire({
                    icon: 'error',
                    title: 'L·ªói',
                    text: 'Dung l∆∞·ª£ng ·∫£nh qu√° l·ªõn, vui l√≤ng ch·ªçn ·∫£nh c√≥ dung l∆∞·ª£ng d∆∞·ªõi 15MB.',
                });
                return;
            }
            await sendMediaFile(chatId, token, 'sendPhoto', imageFile);
        }

        // Ki·ªÉm tra v√† g·ª≠i t·ªáp video
        const videoInput = document.getElementById('videoInput');
        if (videoInput.files.length > 0) {
            const videoFile = videoInput.files[0];
            if (!checkFileSize(videoFile, 15)) {
                Swal.fire({
                    icon: 'error',
                    title: 'L·ªói',
                    text: 'Dung l∆∞·ª£ng video qu√° l·ªõn, vui l√≤ng ch·ªçn video c√≥ dung l∆∞·ª£ng d∆∞·ªõi 15MB.',
                });
                return;
            }
            await sendMediaFile(chatId, token, 'sendVideo', videoFile);
        }

        // G·ª≠i th√¥ng ƒëi·ªáp vƒÉn b·∫£n
        let response = await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: `${message}\n\n‚è∞ **Ng√†y/Gi·ªù G·ª≠i:** ${dateTimeString}`,
                parse_mode: 'Markdown',
            }),
        });

        let data = await response.json();
        console.log(data);

        if (data.ok) {
            // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng n·∫øu kh√¥ng c√≥ l·ªói t·ª´ ph√≠a Telegram
            Swal.fire({
                icon: 'success',
                title: 'Th√†nh c√¥ng!',
                text: 'Th√¥ng tin t·ªë c√°o ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!',
            });
        } else {
            // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói n·∫øu c√≥ l·ªói t·ª´ ph√≠a Telegram
            Swal.fire({
                icon: 'error',
                title: 'L·ªói t·ª´ Telegram',
                text: 'ƒê√£ x·∫£y ra l·ªói khi g·ª≠i th√¥ng tin t·ªë c√°o ƒë·∫øn Telegram. Vui l√≤ng th·ª≠ l·∫°i sau.',
            });
        }
    } catch (error) {
        console.error(error);

        // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói n·∫øu c√≥ l·ªói t·ª´ ph√≠a m√°y ch·ªß ho·∫∑c m·∫°ng
        Swal.fire({
            icon: 'error',
            title: 'L·ªói',
            text: 'ƒê√£ x·∫£y ra l·ªói khi g·ª≠i th√¥ng tin t·ªë c√°o. Vui l√≤ng ki·ªÉm tra l·∫°i k·∫øt n·ªëi internet v√† th·ª≠ l·∫°i sau.',
        });
    }
}


function checkFileSize(file, maxSizeInMB) {
    return file.size <= maxSizeInMB * 1024 * 1024;
}

async function sendMediaFile(chatId, token, method, file) {
    try {
        var formData = new FormData();
        formData.append('chat_id', chatId);
        formData.append(method === 'sendPhoto' ? 'photo' : 'video', file);

        Swal.fire({
            title: 'ƒêang g·ª≠i...',
            html: `ƒêang g·ª≠i ${method === 'sendPhoto' ? '·∫£nh' : 'video'}: <b>0%</b>`,
            allowOutsideClick: false,
            showCancelButton: false,
            showConfirmButton: false,
            onBeforeOpen: () => {
                Swal.showLoading();
                var xhr = new XMLHttpRequest();
                xhr.upload.addEventListener('progress', function (e) {
                    if (e.lengthComputable) {
                        var percent = Math.round((e.loaded / e.total) * 100);
                        Swal.getContent().querySelector('b').textContent = percent + '%';
                    }
                });

                xhr.onload = function () {
                    if (xhr.status == 200) {
                        Swal.close();
                        Swal.fire({
                            icon: 'success',
                            title: 'Th√†nh c√¥ng!',
                            text: `${method === 'sendPhoto' ? '·∫¢nh' : 'Video'} ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!`,
                        });
                    } else {
                        Swal.close();
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: `ƒê√£ x·∫£y ra l·ªói khi g·ª≠i ${method === 'sendPhoto' ? '·∫£nh' : 'video'}.`,
                        });
                    }
                };

                xhr.open('POST', `https://api.telegram.org/bot${token}/${method}`, true);
                xhr.send(formData);
            },
        });
    } catch (error) {
        console.error(error);
        Swal.close();
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: `ƒê√£ x·∫£y ra l·ªói khi g·ª≠i ${method === 'sendPhoto' ? '·∫£nh' : 'video'}.`,
        });
    }
}

function resetFile(inputId, displayId) {
    const input = document.getElementById(inputId);
    const display = document.getElementById(displayId);
    input.value = null; // ƒê·∫∑t gi√° tr·ªã c·ªßa ƒë·∫ßu v√†o file v·ªÅ null ƒë·ªÉ x√≥a file ƒë√£ ch·ªçn
    display.textContent = 'Ch∆∞a c√≥ file n√†o ƒë∆∞·ª£c ch·ªçn';
}
